name: Default

on: push
  # pull_request:
  #   branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preflight_check:
    name: Preflight Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.15'

      - name: Setup ssh key & known host for private github repo dependencies
        working-directory: ${{ github.workspace }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null
          ssh-add - <<< "${{ secrets.WOLFBOT_SSH_PRIVATE_KEY }}"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ${{ github.workspace }}/.venv
          installer-parallel: true

      - name: Configure Poetry Nexus auth
        working-directory: ${{ github.workspace }}
        run: |
          poetry config repositories.nexus https://nexus.iad.w10external.com/repository/pypi-private/
          poetry config http-basic.nexus ${{ secrets.NEXUS_USERNAME }} ${{ secrets.NEXUS_PASSWORD }}

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.venv
          key: v1-virtualenv-3.9.15-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry dependencies
        working-directory: ${{ github.workspace }}
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      # - name: Run SonarQube analysis
      #   uses: wealthsimple/toolbox-script@v1
      #   with:
      #     script: toolbox.sonarqube.run({})
      #     sonarqube_host: ${{ secrets.SONAR_HOST_URL }}
      #     sonarqube_token: ${{ secrets.SONAR_LOGIN_TOKEN }}

      - name: Publish
        run: |
          poetry version patch
          poetry publish -r nexus --build